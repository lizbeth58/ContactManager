{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TestInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContacts.js","components/pages/About.js","components/pages/NotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","console","log","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","TestInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.832fe04f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact =>contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id ?\n                        (contact = action.payload) : contact\n                )\n            };\n        default:\n            return state;\n    }\n};\nexport class Provider extends Component {\n    state = {\n        contacts: [\n        ],\n\n        dispatch: action => {\n            this.setState(state => reducer(state,action))\n        }\n    };\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    };\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from \"../../context\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Contact extends Component{\n    state = {\n        showContactInfo: false,\n    };\n\n    onShowClick = () => {\n        this.setState({showContactInfo: !this.state.showContactInfo});\n    };\n\n    onDeleteClick = async (id,dispatch) =>{\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n    };\n\n    render(){\n        const {id, name, email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n\n        return (\n            <Consumer>\n                {value =>{\n                    const {dispatch} = value;\n                    return(\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                {name}{' '}\n                                <i\n                                    onClick={this.onShowClick}\n                                    className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}\n                                />\n                                <i className=\"fas fa-times\"\n                                   style={{cursor: 'pointer', float: 'right', color:'red'}}\n                                   onClick={this.onDeleteClick.bind(this,id,dispatch)}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i className=\"fas fa-pencil-alt\"\n                                       style={{\n                                           cursor: 'pointer',\n                                           float: 'right',\n                                           color:'black',\n                                           marginRight: '1rem'\n                                       }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\n                                </ul>\n                            ) : console.log(\"ok\")}\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        );\n    }\n}\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n\n};\n\nexport default Contact;\n","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component{\n\n    render(){\n        return(\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return(\n                        <React.Fragment>\n                            <h1 className='display-4 mb-2'>\n                                <span className='text-danger'>Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact key={contact.id}\n                                         contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nconst Header = props => {\n    const { branding }= props;\n    return (\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n           <div className=\"container\">\n               <a href=\"/\" className=\"navbar-brand\">\n                   {branding}\n               </a>\n               <div>\n                   <ul className=\"navbar-nav mr-auto\">\n                       <li className=\"nav-item\">\n                           <Link to=\"/\" className='nav-link'>\n                               <i className='fas fa-home'></i>Home\n                           </Link>\n                       </li>\n                       <li className=\"nav-item\">\n                           <Link to=\"/contact/add\" className='nav-link'>\n                               <i className=\"fas fa-plus\"></i>Add\n                           </Link>\n                       </li>\n                       <li className=\"nav-item\">\n                           <Link to=\"/about\" className='nav-link'>\n                               <i className=\"fas fa-question\"></i>About\n                           </Link>\n                       </li>\n                   </ul>\n               </div>\n           </div>\n       </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\n    return(\n        <div className='form-group'>\n            <label htmlFor={name}>{label}</label>\n            <input type= {type}\n                   className={classnames('form-control form-control-lg', {'is-invalid':error})}\n                   placeholder={placeholder}\n                   name={name}\n                   value={value}\n                   onChange={onChange}\n            />\n            {error &&\n                <div className='invalid-feedback'>\n                    {error}\n                </div>\n            }\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text',\n}\n\nexport default TextInputGroup;","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport TestInputGroup from '../layout/TestInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component{\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {},\n\n    };\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    onSubmit = async (dispatch,e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if(name === ''){\n            this.setState({errors: {name: 'Name is Required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is Required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors:{phone: 'Phone is Required'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone,\n        };\n\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\n\n        this.setState({\n            name:'',\n            email:'',\n            phone:'',\n            errors: {},\n        });\n        this.props.history.push('/');\n    };\n\n    render(){\n\n        const { name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value =>{\n                    const {dispatch} = value;\n                    return(\n                        <div className='card mb-3 '>\n                            <div className='card-header'>\n                                Add Contact\n                            </div>\n                            <div className='card-body'>\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                    <TestInputGroup\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        label=\"name\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n\n                                    />\n                                    <TestInputGroup\n                                        name='email'\n                                        placeholder='Enter Email..'\n                                        value={email}\n                                        type='email'\n                                        label='email'\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TestInputGroup\n                                        name='phone'\n                                        placeholder='Enter Phone...'\n                                        value={phone}\n                                        label='phone'\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type='submit'\n                                           value='Add Contact'\n                                           className='btn btn-light btn-block'\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nAddContact.propTypes = {};\n\nexport default AddContact;\n","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport TestInputGroup from '../layout/TestInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component{\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {},\n\n    };\n\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        });\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n    onSubmit = async (dispatch,e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if(name === ''){\n            this.setState({errors: {name: 'Name is Required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is Required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors:{phone: 'Phone is Required'}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone,\n        };\n\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n\n        //clear state\n        this.setState({\n            name:'',\n            email:'',\n            phone:'',\n            errors: {},\n        });\n        this.props.history.push('/');\n    };\n\n    render(){\n\n        const { name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value =>{\n                    const {dispatch} = value;\n                    return(\n                        <div className='card mb-3 '>\n                            <div className='card-header'>\n                                Edit Contact\n                            </div>\n                            <div className='card-body'>\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                    <TestInputGroup\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        label=\"name\"\n                                        onChange={this.onChange}\n                                        error={errors.name}\n\n                                    />\n                                    <TestInputGroup\n                                        name='email'\n                                        placeholder='Enter Email..'\n                                        value={email}\n                                        type='email'\n                                        label='email'\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TestInputGroup\n                                        name='phone'\n                                        placeholder='Enter Phone...'\n                                        value={phone}\n                                        label='phone'\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type='submit'\n                                           value='Update Contact'\n                                           className='btn btn-light btn-block'\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\n\nexport default EditContact;\n","import React from 'react';\n\nexport default () =>{\n    return(\n        <div>\n            <h1 className='display-4'>About contact manager</h1>\n            <p className='lead'>Simple appp to manage contacts</p>\n            <p className='text-secondary'>version 1.0.0</p>\n        </div>\n    )\n\n}\n","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className='display-4'><span className='text-danger'>404</span> Page Not Found</h1>\n            <p className='lead'>Sorry, that page does not exist</p>\n        </div>\n    );\n\n};","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContacts';\nimport About from './components/pages/About';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport NotFound from \"./components/pages/NotFound\";\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router>\n                <div className=\"App\">\n                    <Header branding=\"Contact Manager\" />\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Contacts}/>\n                            <Route exact path=\"/contact/add\" component={AddContact}/>\n                            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                            <Route exact path=\"/about\" component={About}/>\n                            <Route component={NotFound}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}